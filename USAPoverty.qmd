---
title: " "
format: html
code-fold: true
code-tools: true
toc: true
toc-depth: 3
toc-location: left
self-contained: true
editor: visual
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(
	message = FALSE,
	warning = FALSE)

```

![](images/logo_UNIL.png){width="206"}

```{r}
install.packages("here")
install.packages("ROCR")
install.packages("DT")
install.packages("gt")
install.packages("expss")
install.packages("cowplot")
install.packages("vcd")
install.packages("grid")
install.packages("sf", dependencies=TRUE, repos='http://cran.rstudio.com/')
install.packages("leaflet")
install.packages("kableExtra")
install.packages("Metrics")
install.packages("mlr")
install.packages("caret")
install.packages("ISLR")
install.packages("kernlab")
install.packages("htmltools")
install.packages("liver")
install.packages("rpart.plot")
install.packages("ranger")
install.packages("summarytools")

install.packages("haven")
install.packages("readxl")
install.packages("tidyverse")
install.packages("corrplot")
install.packages("pscl")
install.packages("carData")
install.packages("car")
install.packages("ggpubr")
install.packages("ggridges")
install.packages("visdat")

library(dplyr)
library(haven)
library(tidyr)
library(reshape2)
library(readxl)
library(here)
library(tidyverse)
library(knitr)
library(corrplot)
library(lmtest)  
library(pROC)  
library(ROCR)  
library(lubridate)  
library(pscl)  
library(carData)  
library(car)
library(pROC)
library(ROCR)
library(ggplot2)
library(ggpubr)
library(ggridges)
library(cowplot)
library(vcd)
library(sf)
library(kableExtra)
library(gridExtra)
library(visdat)
library(liver)
library(rpart)
library(rpart.plot)
library(ranger)
library(summarytools)
library(ISLR)
library(e1071)
library(kernlab)
library(caret)
library(Metrics)
library(mlr)
library(MASS)
library(glmnet)
library(pROC)
library(dplyr)
library(knitr)
library(FactoMineR)
library(factoextra)
library(cluster)
library(openxlsx)
```

# **Understanding Poverty in America: Key Predictors and Machine Learning Insights**

**Marcela Choque Quispe, and Mariel Gandarillas Calderon**

**2024-12-20**

## 1. Abstract

This research project delves into the socioeconomic dimensions of poverty in the United States, leveraging the comprehensive data-set provided by the Household Survey USA 2024. The investigation centers on an examination of various demographic and socioeconomic variables to delineate the contours of poverty across the country. After cleaning the data set this study categorizes individuals into "Poor" ans " Non-poor" groups, by aligning the income metrics with the poverty threshold defined by the USA goverment, facilitating an analysis of poverty's factors to uncover patterns within different clusters/communities.

This study identifies the most important variables: education, family size, marital status, and race. This study offers valuable insights into the factors that could be targeted to combat poverty in American society.

## 2. Introduction

### 2.1 Context and Background

Poverty remains a persistent issue in the United States, affecting over 37 million people ([United States Census Bureau, 2024](https://www.census.gov/newsroom/stories/poverty-awareness-month.html#:~:text=The%20official%20poverty%20rate%20in,decreased%20between%202021%20and%202022.)). Despite government efforts, the number of individuals impacted by poverty continues to rise. Additionally, the Human Rights Watch department of the American Civil Liberties Union points out that these factors are not the same for people of different races. They highlight that the average white family in the U.S. has roughly eight times the wealth of the average Black family, and white college graduates have over seven times more wealth than Black college graduates. Therefore, understanding the socioeconomic factors that influence the likelihood of falling into poverty is crucial.

### 2.2 Aim of the Investigation

Our primary objective is to use machine learning models to discern the variables that most significantly influence the probability of an individual falling below the poverty line. The research question of this project are the following:

1.  What are the key variables related to higher likelihood of falling into poverty in the United States?

## 3. Data Description

The core of our analysis is the [Household Survey 2024](https://www.census.gov/programs-surveys/household-pulse-survey/data/datasets.2024.html#list-tab-1264157801) from the United States Census Bureau. We will enrich this data-set by creating a new feature to categorize individuals based on their economic status, using the USA government poverty line as our benchmark. Our variables of interest are demographically and socio-economically diverse, encompassing race, age, gender, geographic location, education, marital status, and income.

### 3.1 Variable Description

The data-set utilized in this project, is titled "Household Survey USA 2024," originates from the official website of the United States Census Bureau. It constitutes a compilation of data collected through household surveys conducted across diverse regions of the United States.

```{r echo=FALSE}


data_set <- read.csv(here::here("data_set.csv"))

prepared_dataset <- data_set %>%
  dplyr::select(
    RecordID = SCRAM,
    HispanicOrigin = RHISPANIC, 
    Race = RRACE,  
    BirthYear = TBIRTH_YEAR,
    Gender = EGENID_BIRTH, 
    Location = REGION,  
    Education = EEDUC,  
    MaritalStatus = MS,  
    Income = INCOME,
    HouseholdSize = THHLD_NUMPER
  ) %>%
  mutate(
    Age = year(Sys.Date()) - BirthYear
  ) %>%
  dplyr::select(- BirthYear
  )#%>%
  #slice(1:(n() - 7))

```

```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE}
 
prepared_dataset <- prepared_dataset%>%
  dplyr::select(
    RecordID, HispanicOrigin, Race, Gender, Location, Education, MaritalStatus, Income, HouseholdSize, Age
  )
```

In this step, we selected key variables like ID numbers, where people come from, their ethnicity, gender, education level, income, and age. The table gives a quick look at these details,including their names, data types, and brief explanations (prior the data transformation).

```{r}

variable_types <- as.data.frame(sapply(prepared_dataset, class))
variable_types <- cbind(Name = names(prepared_dataset), variable_types)
colnames(variable_types) <- c("Name", "Type")
rownames(variable_types) <- NULL

explanations <- c(
  "Identifier for each observation.",
  "Hispanic origin indicator where 1 means No, and 2 Yes.",
  "Race and ethnicity indicator,where 1 means White, 2 Black, 3 Asian, and 4 Other.",
  "Current gender identity, where 1 is Male, 2 Female, 3 Trasgender, and 4 Other",
  "Region code, where 1 means Northeast, 2 South, 3 Midwest, and 4 West.",
  "Education attainment, where 1 is Less than High School, 2 Some High School, 3 High School graduate, 4 College in progress, 5 AA or AS degree, 6 Bachelor's degree, and 7 Master's degree.",
  "Marital status, where 1 is Married, 2 Widowed, 3 Divorced, 4 Separated, and 5 Never married.",
  "Ordinal variable representing the household income before taxes  per year level, where 1 is Less than $25k, 2 is $25k-$34,9k, 3 is $35k-$49,9k, 4 is $50k-$74,9k, 5 is $75k-$99,9k, 6 is $100k-$149,9k, 7 is $150k-$199,9k. and 8 is higher than $200k.",
  "Total number of people in household. Numerical variable",
  "Variable representing the age"
)


variable_types$Explanation <- explanations


kable(variable_types)

```

### 3.2 Data Cleaning

Upon visualizing the variable types, it's evident that the majority are integers, signifying categorical data, while only 'Age' stands out as numerical. Additionally, 'RecordID' is characterized as a character variable, serving as a unique identifier.

```{r}


vis_dat(prepared_dataset, warn_large_data = FALSE) + 
  scale_fill_brewer(palette="Paired")


```

```{r}

prepared_dataset_modified <- prepared_dataset %>%
  mutate(across(everything(), ~ifelse(. == -99, NA, .)))

# Count NA values, including those originally set as -99
na_counts <- colSums(is.na(prepared_dataset_modified))

na_percentages <- (na_counts / nrow(prepared_dataset_modified)) * 100

# Create a data frame to display the counts
na_df <- data.frame(
  Variable = names(na_counts), 
  "Counting of NAs" = na_counts, 
  Percentage = sprintf("%.2f%%", na_percentages)  # formatted as percentage with 2 decimal places
)

kable(na_df,
       align = 'c',
          options = list(
            dom = 'lBfrtip', 
            pageLength = 15,   
            lengthMenu = c(10, 15, 20), 
            paging = TRUE,
            searching = TRUE,
            ordering = TRUE
          ))
```

This table presents the count and percentage of missing values (NA) for each variable in the dataset. Notably, 'MaritalStatus' and 'Income' show some missing data, with 'Income' having the highest percentage of missing values close to 2%. Additionally, it's important to note that in this dataset, the value -99 is interpreted as NA.

### 3.3 Data modifications

Eight histograms displaying the distributions variables within a data set will help us to determine which adjustments in the data we need to do.}.

```{r}
numeric_vars <- sapply(prepared_dataset, is.numeric)
numeric_cols <- names(numeric_vars[numeric_vars])
par(mfrow = c(ceiling(length(numeric_cols)/3), 3), mar = c(6, 6, 3, 2))
for (col in numeric_cols) {
  
  if (all(prepared_dataset[[col]] %in% c(1, 2), na.rm = TRUE)) {
    breaks_vals = c(0.5, 1.5, 2.5)  
  } else {
    if (all(prepared_dataset[[col]] %in% c(1, 2,3,4), na.rm = TRUE)) {
    breaks_vals = c(0.5, 1.5, 2.5, 3.5, 4.5)  
  } else {
    range_vals = range(prepared_dataset[[col]], na.rm = TRUE)
    breaks_vals = seq(from = floor(range_vals[1]), to = ceiling(range_vals[2]), by = 1)
  }}

  hist(prepared_dataset[[col]], breaks = breaks_vals, main = paste("Distribution of", col), xlab = col,
       xaxt = 'n', right = FALSE)  

  axis(1, at = floor(min(breaks_vals)):ceiling(max(breaks_vals)), 
       labels = floor(min(breaks_vals)):ceiling(max(breaks_vals)))
}
```

In general, the change will involve adding the category 0 to all variables. Additionally, as part of this adjustment, categories with minority distributions will be grouped together. For example, in the 'Education' variable, the 7 categories will be reduced to just 5

#### 3.3.1 Re-coding of Variables

The new categories for the following variables are as shown in the table below:

```{r}


explanations <- c(
  "Where 0 means No, and 1 Yes.",
  "Where 0 means Male, 1 Female, and 3 Others.",
  "Where 0 means White, 1 Black, 2 Others.",
  "Where 0 means Northwest, 1 South, 2 Midwest, 3 West.",
  "Where 0 means No education, 1 High School graduate, 2 AA or AS degree, 3 Bachelor's degree, and 4 Master's degree.",
  "Where 0 is Married, 1 Widowed, 2 Divorced, 3 Separated, and 4 Never married.",
  "Where 0 is a family size of just 1 person, 1 a family of two, etc."
)

variable_change <- cbind(c("RHispanic", "Gender", "Race", "Location", "Education", "Marital Status", "Househod Size"), explanations)
colnames(variable_change) <- c("Name", "New categories")
rownames(variable_change) <- NULL

kable(variable_change)
```

#### 3.3.2 NAs Treatment

As the proportion of NAs is insignificant (0.6% in Marital Status and 1.9% in Income), these observations will be removed.

```{r}

prepared_dataset<-prepared_dataset%>%
  filter(
    MaritalStatus != -99,  # Exclude -99 from MaritalStatus
    Income != -99)%>%  # Exclude -99 from Income
   mutate(
    HispanicOrigin = ifelse(HispanicOrigin == 1, 0, ifelse(HispanicOrigin == 2, 1, HispanicOrigin)),  # Recode HispanicOrigin
    Gender = case_when(
      Gender == 1 ~ 0, 
      Gender == 2 ~ 1,
      Gender == 3 ~ 2,
      TRUE ~ Gender
    ),  # Recode Gender
    Race = case_when(
      Race == 1 ~ 0,
      Race == 2 ~ 1,
      Race %in% c(3, 4) ~ 2,
      TRUE ~ Race
    ),  # Recode Race
    Location = case_when(
      Location == 1 ~ 0,
      Location == 2 ~ 1,
      Location == 3 ~ 2,
      Location == 4 ~ 3,
      TRUE ~ Location
    ),  # Recode Location
    Education = case_when(
      Education %in% c(1, 2) ~ 0,
      Education == 3 ~ 1,
      Education == 4 ~ 1,
      Education == 5 ~ 2,
      Education == 6 ~ 3,
      Education == 7 ~ 4,
      TRUE ~ Education
    ),  # Recode Education
    MaritalStatus = case_when(
      MaritalStatus == 1 ~ 0,
      MaritalStatus == 2 ~ 1,
      MaritalStatus == 3 ~ 2,
      MaritalStatus == 4 ~ 3,
      MaritalStatus == 5 ~ 4,
      TRUE ~ MaritalStatus
    ),  # Recode MaritalStatus
    HouseholdSize = case_when(
      HouseholdSize == 1 ~ 0,            
      HouseholdSize == 2 ~ 1,            
      HouseholdSize == 3 ~ 2,            
      HouseholdSize == 4 ~ 3,            
      HouseholdSize == 5 ~ 4,            
      HouseholdSize >= 6 ~ 5,            
      TRUE ~ HouseholdSize 
    ) 
  )

```

After all the changes we updated the histograms to showcase our dataset's new coding schemes, which significantly improve the clarity of our distribution visualizations.

```{r}
numeric_vars <- sapply(prepared_dataset, is.numeric)
numeric_cols <- names(numeric_vars[numeric_vars])
par(mfrow = c(ceiling(length(numeric_cols)/3), 3), mar = c(6, 6, 3, 2))
for (col in numeric_cols) {
  
  if (all(prepared_dataset[[col]] %in% c(0, 1), na.rm = TRUE)) {
    breaks_vals = c(-0.5,0.5, 1.5)  
  } else {
    if (all(prepared_dataset[[col]] %in% c(0,1, 2,3), na.rm = TRUE)) {
    breaks_vals = c(-0.5,0.5, 1.5, 2.5, 3.5)  
  } else {
    range_vals = range(prepared_dataset[[col]], na.rm = TRUE)
    breaks_vals = seq(from = floor(range_vals[1]), to = ceiling(range_vals[2]), by = 1)
  }}

  hist(prepared_dataset[[col]], breaks = breaks_vals, main = paste("Distribution of", col), xlab = col,
       xaxt = 'n', right = FALSE)  

  axis(1, at = floor(min(breaks_vals)):ceiling(max(breaks_vals)), 
       labels = floor(min(breaks_vals)):ceiling(max(breaks_vals)))
}
```

#### 3.3.3 Features creation

To answer the research questions we need to create a binary variable (`PovertyStatus`) which will be 1 if the individual is living in Poverty according to the [Poverty Guidelines](https://aspe.hhs.gov/topics/poverty-economic-mobility/poverty-guidelines) of the Office of the Assistant Secretary For Planning and Evaluation of the USA.

```{r}

prepared_dataset <- prepared_dataset %>%
  mutate(
    PovertyStatus = case_when(
      HouseholdSize == 1 & Income == 1 ~ 1, 
      HouseholdSize == 2 & Income %in% c(1) ~ 1, 
      HouseholdSize == 3 & Income %in% c(1) ~ 1, 
      HouseholdSize == 4 & Income %in% c(1, 2) ~ 1, 
      HouseholdSize == 5 & Income %in% c(1, 2) ~ 1, 
      HouseholdSize == 6 & Income %in% c(1, 2, 3) ~ 1, 
      HouseholdSize == 7 & Income %in% c(1, 2, 3) ~ 1, 
      HouseholdSize == 8 & Income %in% c(1, 2, 3) ~ 1, 
      TRUE ~ 0
    )
  ) %>%
  mutate(
    PovertyStatus = factor(PovertyStatus, levels = c(0, 1), labels = c("Not Poor", "Poor"))
  )

# Creating a bar plot with ggplot
ggplot(prepared_dataset, aes(x = PovertyStatus, fill = PovertyStatus)) +
  geom_bar() +
  labs(title = "Distribution of Poverty Status",
       x = "Poverty Status",
       y = "Count") +
  scale_fill_manual(values = c("Not Poor" = "#236192FF", "Poor" = "#A2D4AE")) +  # Assign colors
  geom_text(stat = 'count', aes(label = ..count..), vjust = -0.5) +  # Add data labels
  theme_minimal() +  # Use a minimal theme
  theme(axis.title = element_text(face = "bold", color = "#333333"),
        plot.title = element_text(hjust = 0.5))

```

#### 3.3.4 Labeling for Neo4j

For visualization purposes, labels will be added to the final data set, which will be used in the Neo4j tool to assist in data exploration. The labels will be added based on the table in section 3.3.1.

```{r}
#In case you would like to have the data set with codes
#write.xlsx(prepared_dataset,"Prepared data set.xlsx")

#Adding the labels into the final data set
final_dataset <- prepared_dataset %>%
  mutate(
    HispanicOrigin = case_when(
      HispanicOrigin == 0 ~ "No hispanic origin", 
      HispanicOrigin == 1 ~ "Hispanic origin",
      TRUE ~ as.character(HispanicOrigin)
    ),
    Gender = case_when(
      Gender == 0 ~ "Male", 
      Gender == 1 ~ "Female",
      Gender == 2 ~ "Others",
      TRUE ~ as.character(Gender)
    ),
    Race = case_when(
      Race == 0 ~ "White",
      Race == 1 ~ "Black",
      Race == 2 ~ "Others",
      TRUE ~ as.character(Race)
    ),
    Location = case_when(
      Location == 0 ~ "Northwest",
      Location == 1 ~ "South",
      Location == 2 ~ "Midwest",
      Location == 3 ~ "West",
      TRUE ~ as.character(Location)
    ),
    Education = case_when(
      Education == 0 ~ "No education",
      Education == 1 ~ "High school graduate",
      Education == 2 ~ "AA degree",
      Education == 3 ~ "Bachelor degree",
      Education == 4 ~ "Master degree",
      TRUE ~ as.character(Education)
    ),
    MaritalStatus = case_when(
      MaritalStatus == 0 ~ "Married",
      MaritalStatus == 1 ~ "Widowed",
      MaritalStatus == 2 ~ "Divorced",
      MaritalStatus == 3 ~ "Separated",
      MaritalStatus == 4 ~ "Never married",
      TRUE ~ as.character(MaritalStatus)
    ),
    Income = case_when(
      Income == 1 ~ "Less than $25k",
      Income == 2 ~ "$25k-$34,9k",
      Income == 3 ~ "$35k-$49",
      Income == 4 ~ "$50k-$74,9k",
      Income == 5 ~ "$75k-$99,9k",
      Income == 6 ~ "$100k-$149,9k",
      Income == 7 ~ "$150k-$199,9k",
      Income == 8 ~ "Higher than $200k",
      TRUE ~ as.character(Income)
    )
  )

# Save the transformed dataset in a csv file
#write.csv(final_dataset, "Poverty_in_US_coded.csv", row.names = FALSE)
```

## 4. Clustering

### 4.1 Communities

Using Neo4j, we identified and created two distinct communities based on similarities in the dataset using community detection algorithms like Louvain. In Neo4j, communities represent clusters of nodes that are more densely connected to each other than to the rest of the graph, revealing hidden patterns or groupings in the data. The chart explores a key characteristic of these communities: the proportion of people categorized as "Poor" or "Not Poor" in each community. This visualization highlights how poverty status varies across the communities, providing insights into their socio-economic composition and underlying connections.

```{r}
# Load the data
community_data <- read_delim("data/Community_povertystatus.csv", delim = ",", col_names = TRUE)

# Define colors for the plot
plot_colors <- c("#9EA2A2FF","#C6D4D6FF","#DCEDDF","#A2D4AE","#0F8D7BFF",                  "#5E81ACFF","#236192FF","#0C2340FF")

# Define colors for PovertyStatus
plot_colors <- c("#C6D4D6FF", "#0F8D7BFF")  # Adjust for clear contrast

# Update the CommunityName to descriptive labels
community_data$CommunityName <- factor(community_data$CommunityName, 
                                       levels = c(18, 19), 
                                       labels = c("Community 1", "Community 2"))

# Create the bar plot
ggplot(community_data, aes(x = CommunityName, y = Percentage, fill = PovertyStatus)) +
  geom_bar(stat = "identity", position = "stack") +
  scale_fill_manual(values = plot_colors) +
  labs(
    title = "Percentage of Poverty Status in Communities",
    x = "Community",
    y = "Percentage",
    fill = "Poverty Status"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
    axis.title.x = element_text(face = "bold", size = 14),
    axis.title.y = element_text(face = "bold", size = 14),
    legend.title = element_text(face = "bold", size = 12),
    legend.text = element_text(size = 10)
  )


```

Both Community 1 and Community 2 exhibit a high proportion of individuals categorized as "Not Poor," as evidenced by the dominant light gray section of the bars, which may suggest a generally higher income status in the dataset.

Although the overall proportion of "Poor" individuals is low, Community 1 does exhibit a slightly higher percentage of "Poor" individuals compared to Community 2. The difference might indicate that the Louvain algorithm used for community detection picked up on underlying structural factors that correlate with poverty status, even if this is not the primary driver of the clustering. The higher proportion of "Poor" individuals in Community 1 suggests potential socio-economic vulnerabilities that might require further attention.

### 4.2 Similarities

Using Neo4j, we constructed a similarity graph that identifies shared characteristics among individuals based on their marital status, gender, and race. Each cluster visually represents groups of individuals connected by similarities in these attributes. The similarity analysis provides a foundation to explore relationships and patterns within the data, which can guide our research questions. Moving forward, we will leverage these identified similarities to analyze socio-demographic trends and answer our investigative questions, deepening our understanding of the interconnected dynamics within the dataset.

-   **First Graph (Marital Status)**: The graph visualization of marital status illustrates distinct clusters of individuals grouped by their marital category, such as "single," "married," "widowed," and others. Upon closer analysis, according to the graph individuals categorized as "married" exhibit connections with those in the "widowed" category, indicating similarities between these groups. In contrast, other marital statuses, such as "single," "divorced," and "separated," do not show significant interconnections.

    This pattern suggests that individuals who are married and widowed may share common socioeconomic or demographic factors, such as age, income, or family size, which create a bridge of similarity between these groups. For instance, married individuals might transition into the widowed category as a natural progression in life, maintaining shared characteristics like household size or community ties.

    The lack of connections between other marital statuses may reflect unique, non-overlapping circumstances or characteristics specific to those categories. For example, individuals who are "single" or "divorced" may have distinct social or economic patterns that do not align with the shared attributes of married or widowed individuals.

    Understanding these connections could provide valuable insights into how marital status influences social and economic outcomes.

    ![](images/sim3-01.jpg)

-   **Second Graph (Gender)**: This graph depicts two main clusters representing gender categories (male and female), with individuals linked to their corresponding gender. Each individual node is linked to its respective gender category, showcasing clear separations between the two groups. The symmetry and density of the clusters highlight that the population is evenly distributed across both genders in the dataset.

    Additionally, there are no direct connections between the male and female clusters, indicating that gender, as a characteristic, is an independent attribute without overlap in this visualization.

    ![](images/sim2-01.jpg)

-   **Third Graph (Race)**: The graph visualizes clusters of individuals grouped by race, showing the distribution and connections within racial categories such as White, Black, or Others. The visualization reveals three distinct clusters, each centered around a node representing a specific racial category. Each individual node is connected to its corresponding racial group, highlighting the clear segmentation in the dataset.

    The density of connections within each cluster reflects the distribution of individuals across racial categories. Larger clusters indicate higher representation within the dataset. The lack of overlapping connections between clusters suggests that race is treated as a standalone attribute, with no shared affiliations among the groups.

![](images/sim1-01.jpg)

### 4.3 Traditional Clustering Methods

The first step was to prepare the data, due to the memory capacity it was decided to work with the data of the Validation Set, and those variables that are nominal were transformed into factors. According to the Silhouette method, it was determined to have 2 clusters, where it was observed that the second cluster is not as homogeneous as the first one. The dendogram shows the division of the two clusters.

```{r results='hide'}
set.seed(145)
index <- sample(1:nrow(prepared_dataset))
n_tr <- round(0.70 * nrow(prepared_dataset))
n_val <- round(0.15 * nrow(prepared_dataset))
ds_val <- prepared_dataset[index[(n_tr + 1):(n_tr +n_val)],]
ds_clust <- ds_val%>%
  mutate(
    HispanicOrigin = factor(HispanicOrigin, levels = c(0, 1), labels = c("Non-Hispanic", "Hispanic")),Gender = factor(Gender, levels = c(0, 1, 3), labels = c("Male", "Female", "Others")),
    Race = factor(Race, levels = c(0, 1, 2), labels = c("White", "Black", "Others")),
    Location = factor(Location, levels = c(0, 1, 2, 3), labels = c("Northwest", "South", "Midwest", "West")),
    MaritalStatus = factor(MaritalStatus, levels = c(0, 1, 2, 3, 4), labels = c("Married", "Widowed", "Divorced", "Separated", "Never Married")),
    Education = factor(Education, levels = c(0, 1, 2, 3, 4), labels = c("No education", "High School", "AA degree", "Bachelor", "Master"))
  )
```

```{r}
ds_clust$RecordID <-NULL
# Calculate the Gower distance for ds_clust
ds_clust_dist <- daisy(ds_clust, metric = "gower")
# Determine the optimal number of clusters
n_clust_min <- 2
n_clust_max <- 6
avg_sil <- numeric(length = n_clust_max - n_clust_min + 1)
i <- 0
for (n_clust in n_clust_min:n_clust_max) {
  i <- i + 1
  tmp <- pam(ds_clust_dist, k = n_clust)
  tmp2 <- summary(silhouette(tmp))
  avg_sil[i] <- tmp2$avg.width
}
avg_sil_df <- data.frame(nb_clus = n_clust_min:n_clust_max, silhouette = avg_sil)

# Plot to visualize the average silhouette as a function of the number of clusters
plot(silhouette~nb_clus, data = avg_sil_df, type = "b", pch = 20)
```

```{r}
# Apply PAM using Gower's distance and specify number of clusters
ds_clust_pam <- pam(ds_clust_dist, k=2)
# Silhouette plot to visualize cohesion and separation of clusters
plot(silhouette(ds_clust_pam), col="#0F8D7BFF", border=NA)
```

```{r}
dist_mat <- dist(ds_clust, method = "manhattan")

# Perform hierarchical clustering using full linkage
ds_hc <- hclust(dist_mat, method = "complete")

plot(ds_hc, hang=-1, labels=FALSE, xlab="")  
rect.hclust(ds_hc, k=2, border="red")  

#  cut the tree into 2 clusters and store the result
data_clust <- cutree(ds_hc, k=2)
```

After determining the number of clusters, we examined boxplots for each variable. Notably, the second cluster includes a higher number of individuals considered poor, predominantly women. This difference may be related to the gender income gap that typically affects women negatively. Furthermore, this cluster predominantly consists of individuals whose highest educational attainment is a high school diploma. This observation supports the conclusion from the CART model that having an education level lower than a bachelor's degree increases the likelihood of being classified as poor. Additionally, the second cluster has a higher proportion of non-white individuals, which may be linked to the historical issues of racism discussed earlier in this work. Finally, a significant number of people in this cluster reside in the southern part of the United States.

According to the graphs , from Cluster 2, it is observed that it is less homogeneous than Cluster 1 and includes a higher proportion of "Poor" individuals. Predominantly consists of women, non-white individuals, and those whose highest educational attainment is a high school diploma. Many individuals in this cluster are located in the Southern United States, which correlates with historical socio-economic disadvantages.

```{r}
# Define the color palettes
custom_palette <- c("#9EA2A2FF","#A2D4AE","#0F8D7BFF","#236192FF","#0C2340FF")
poverty_palette_2 <- c("#A2D4AE", "#236192FF")
poverty_palette_3 <- c("#9EA2A2FF", "#A2D4AE", "#236192FF")
poverty_palette_4 <- c("#9EA2A2FF", "#A2D4AE", "#0F8D7BFF", "#236192FF")

# Calculate Gower distance for ds_clust
ds_clust_dist <- daisy(ds_clust, metric = "gower")

# Apply PAM using Gower distance and specify the number of clusters
ds_clust_pam <- pam(ds_clust_dist, k = 2)

# Combine the cluster assignments with the original data
ds_clust_clus <- cbind(Cluster = factor(ds_clust_pam$clustering), ds_clust)

# Ajustar el tamaño del texto y la altura de los gráficos
theme_custom <- theme_minimal() +
  theme(
    plot.title = element_text(size = 10),
    axis.title = element_text(size = 8),
    axis.text = element_text(size = 6),
    legend.text = element_text(size = 6),
    legend.title = element_text(size = 8),
    strip.text = element_text(size = 8)
  )

# Crear gráficos ajustados
box1 <- ggplot(ds_clust_clus, aes(x = Cluster, fill = PovertyStatus)) +
  geom_bar() +
  scale_fill_manual(values = poverty_palette_2) + 
  labs(title = "Poverty Status") +
  theme_custom

box2 <- ggplot(ds_clust_clus, aes(y = HouseholdSize, x = Cluster)) +
  geom_boxplot() +
  labs(title = "Household Size") +
  theme_custom

box3 <- ggplot(ds_clust_clus, aes(x = Cluster, fill = Gender)) +
  geom_bar() +
  scale_fill_manual(values = poverty_palette_3) + 
  labs(title = "Gender") +
  theme_custom

box4 <- ggplot(ds_clust_clus, aes(x = Cluster, fill = Education)) +
  geom_bar() +
  scale_fill_manual(values = custom_palette) + 
  labs(title = "Education ") +
  theme_custom

box5 <- ggplot(ds_clust_clus, aes(x = Cluster, fill = Race)) +
  geom_bar() +
  scale_fill_manual(values = poverty_palette_3) + 
  labs(title = "Race ") +
  theme_custom

box6 <- ggplot(ds_clust_clus, aes(x = Cluster, fill = Location)) +
  geom_bar() +
  scale_fill_manual(values = poverty_palette_4) + 
  labs(title = "Location ") +
  theme_custom

box7 <- ggplot(ds_clust_clus, aes(x = Cluster, fill = MaritalStatus)) +
  geom_bar() +
  scale_fill_manual(values = custom_palette) + 
  labs(title = "Marital Status ") +
  theme_custom

# Combinar los gráficos en una disposición de 3 columnas por 3 filas
grid.arrange(
  box1, box2, box3,
  box4, box5, box6,
  box7, ncol = 3, nrow = 3
)
```

The clustering analysis explicitly identifies poverty as a key outcome, with Cluster 2 showing a clear association with factors such as race, gender, and education. And similarities analysis hints at these connections but does not directly link them to poverty.

#### Similarities vs. Clustering: Comparison of Results

```{r}
# Create the data for the table
comparison_table <- data.frame(
  Aspect = c("Marital Status", "Gender", "Race", "Poverty", "Education", "Location"),
  Similarities_Analysis = c(
    "Married and widowed individuals are connected, reflecting shared socio-economic characteristics.",
    "Separate clusters for males and females, indicating distinct gender characteristics in the dataset.",
    "Clear segmentation of racial groups with minimal overlap.",
    "Poverty status differences are present but not explicitly explored in similarities.",
    "Not a primary focus in the similarities analysis.",
    "Location was not analyzed in similarities."
  ),
  Clustering_Analysis = c(
    "No explicit marital status differentiation, but socio-economic vulnerability (widowed, single) aligns with Cluster 2.",
    "Cluster 2 shows a higher proportion of females, linking gender disparity to poverty and socio-economic challenges.",
    "Cluster 2 includes more non-white individuals, tying historical racism to increased poverty likelihood.",
    "Cluster 2 has a higher proportion of poor individuals, correlating with gender, education, and racial disparities.",
    "Cluster 2 predominantly includes individuals with a high school diploma, linking lower education levels to poverty.",
    "Cluster 2 has a higher representation of individuals from the Southern U.S., correlating with socio-economic issues."
  )
)

# Create the table in kable format
kable(comparison_table, format = "html", escape = FALSE, col.names = c("Aspect", "Similarities Analysis", "Clustering Analysis")) %>%
  kable_styling(full_width = TRUE, bootstrap_options = c("striped", "hover", "condensed"))

```

#### **Comparing Methods**

The similarities analysis provides a broad overview of connections based on socio-demographic characteristics, while the clustering analysis dives deeper into how these characteristics relate to poverty and socio-economic outcomes. Together, these approaches offer complementary insights:

-   **Similarities analysis** excels at revealing hidden patterns and connections within specific attributes.

-   **Clustering analysis** integrates multiple variables to provide a comprehensive picture of socio-economic disparities, highlighting actionable areas like education and location for interventions.

Combining these methods could enhance understanding, leveraging the connections from similarities with the deeper poverty-focused insights from clustering.

## 5. Analysis

### 5.1 What is the educational level of the majority of people living in poverty?

The graph clearly illustrates the distribution of educational levels among individuals by poverty status. The majority of individuals living in poverty fall into the "High school graduate" category, followed by "No education." This indicates that lower educational attainment is strongly associated with poverty. Conversely, the "Bachelor degree" and "Master degree" categories are more prominent among those not living in poverty, highlighting the potential protective role of higher education against economic hardship.

```{r}
# Load the data
data_education_percentage <- read_delim("data/povertystatus_education_percentage.csv", delim = ";", col_names = TRUE)

# Define the color palette
plot_colors <- c("#9EA2A2FF","#C6D4D6FF","#DCEDDF","#A2D4AE","#0F8D7BFF",                  "#5E81ACFF","#236192FF","#0C2340FF")

# Create the bar plot for education level distribution by poverty status
ggplot(data_education_percentage, aes(x = PovertyStatus, y = Percentage, fill = EducationLevel)) +
  geom_bar(stat = "identity", position = "stack") +
  labs(
    title = "Education Level Distribution
    by Poverty Status",
    x = "Poverty Status",
    y = "Percentage (%)",
    fill = "Education Level"
  ) +
  theme_minimal() +
  scale_fill_manual(values = plot_colors) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
    axis.title.x = element_text(face = "bold", size = 14),
    axis.title.y = element_text(face = "bold", size = 14),
    legend.title = element_text(face = "bold", size = 12),
    legend.text = element_text(size = 10)
  )

```

### 5.2 Are unmarried or unpartnered individuals more likely to experience poverty?

Based on the analysis extracted from Neo4j, unmarried or unpartnered individuals (categorized as "Never Married," "Divorced," "Separated," and "Widowed") are more likely to experience poverty compared to married individuals. The visualization clearly shows that a higher percentage of individuals within the "Poor" category fall into these unmarried or unpartnered groups, with "Never Married" standing out as the most significant. This indicates a correlation between marital status and poverty, where being unpartnered is associated with a greater likelihood of experiencing economic hardship.

```{r}
# Load the data
data_marital_percentage <- read_delim("data/povertystatus_marital status_percentage.csv", delim = ";", col_names = TRUE)

# Define colors for the plot
plot_colors <- c("#9EA2A2FF","#C6D4D6FF","#DCEDDF","#A2D4AE","#0F8D7BFF",                  "#5E81ACFF","#236192FF","#0C2340FF")

# Create the bar plot for marital status distribution across poverty status
ggplot(data_marital_percentage, aes(x = PovertyStatus, y = Percentage, fill = MaritalStatus)) +
  geom_bar(stat = "identity", position = "fill") +
  labs(
    title = "Marital Status Distribution by Poverty Status",
    x = "Poverty Status",
    y = "Percentage (%)",
    fill = "Marital Status"
  ) +
  theme_minimal() +
  scale_fill_manual(values = plot_colors) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
    axis.title.x = element_text(face = "bold", size = 14),
    axis.title.y = element_text(face = "bold", size = 14),
    legend.title = element_text(face = "bold", size = 12),
    legend.text = element_text(size = 10)
  )

```

### 5.3 Is there a correlation between being African American and the likelihood of experiencing poverty?

There appears to be a potential correlation between being African American and the likelihood of experiencing poverty. In the analysis of the communities, we observed that Community 1, which has a higher percentage of individuals living in poverty, also exhibits a larger proportion of African American individuals compared to Community 2. While this does not directly prove causation, it suggests that African Americans may face structural or socioeconomic barriers that increase their likelihood of living in poverty within these communities. Further investigation into other socioeconomic factors, such as education, employment, and access to resources, would be necessary to substantiate this observation.

```{r}
# Load the data
community_race_data <- read_delim("data/Community_race_percentage.csv")

# Update the CommunityName to descriptive labels
community_race_data$CommunityName <- factor(community_race_data$CommunityName, 
                                            levels = unique(community_race_data$CommunityName),
                                            labels = paste("Community", seq_along(unique(community_race_data$CommunityName))))

# Define colors for Race
plot_colors <- c("#9EA2A2FF","#DCEDDF","#236192FF","#0C2340FF")

# Create the bar plot for race distribution across communities
ggplot(community_race_data, aes(x = CommunityName, y = Percentage, fill = Race)) +
  geom_bar(stat = "identity", position = "stack") +
  scale_fill_manual(values = plot_colors) +
  labs(
    title = "Race Distribution Across Communities",
    x = "Community",
    y = "Percentage (%)",
    fill = "Race"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
    axis.title.x = element_text(face = "bold", size = 14),
    axis.title.y = element_text(face = "bold", size = 14),
    legend.title = element_text(face = "bold", size = 12),
    legend.text = element_text(size = 10)
  )
```

```{r}
# Define the color palette
plot_colors <- c("#9EA2A2FF", "#A2D4AE", 
 "#236192FF", "#0C2340FF")

# Reorder PovertyStatus to have "Poor" first
final_dataset$PovertyStatus <- factor(final_dataset$PovertyStatus, 
                                      levels = c("Poor", "Not Poor"))

# Create the bar plot for Race distribution by Poverty Status
ggplot(final_dataset, aes(x = PovertyStatus, fill = Race)) +
  geom_bar(position = "fill", stat = "count") +
  scale_fill_manual(values = plot_colors) +
  labs(
    title = "Race Distribution by Poverty Status",
    x = "Poverty Status",
    y = "Percentage (%)",
    fill = "Race"
  ) +
  theme_minimal() +
  scale_y_continuous(labels = scales::percent_format()) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
    axis.title.x = element_text(face = "bold", size = 14),
    axis.title.y = element_text(face = "bold", size = 14),
    legend.title = element_text(face = "bold", size = 12),
    legend.text = element_text(size = 10)
  )
```

### 5.4 Does gender influence the probability of experiencing poverty?

Based on the community analysis, we observe a positive correlation between being a woman and an increased likelihood of experiencing poverty. The analysis reveals that Community 2, which predominantly consists of women, exhibits the highest percentage of individuals living in poverty.

The following table, generated using Neo4j, confirms these findings, showing that 69.69% of individuals living in poverty in the United States are women.

```{r}

# Load the data
data_gender_percentage <- read_delim("data/povertystatus_gender_percentage.csv", delim = ";", col_names = TRUE)

# Create the bar plot for gender distribution across poverty status
ggplot(data_gender_percentage, aes(x = PovertyStatus, y = Percentage, fill = Gender)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(
    title = "Gender Distribution by Poverty Status",
    x = "Poverty Status",
    y = "Percentage (%)",
    fill = "Gender"
  ) +
  theme_minimal() +
  scale_fill_manual(values = c("Female" = "#236192FF", "Male" = "#A2D4AE"))
  

```

Similarly, this is corroborated by the k-means clustering analysis. The graph for Cluster 2, predominantly composed of women, also shows, unfortunately, a higher percentage of individuals living in poverty.

### 5.5 How is family size related to the likelihood of experiencing poverty?

The chart, based on data analyzed using Neo4j, reveals how household size relates to poverty.

```{r}
# Load the data
data_household <- read_delim("data/povertystatus_householdsize_percentage.csv", delim = ";", col_names = TRUE)



# Create the bar plot
ggplot(data_household, aes(x = PovertyStatus, y = Percentage, fill = factor(HouseholdSize))) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(
    title = "Percentage of Poor and Non-Poor by Household Size",
    x = "Poverty Status",
    y = "Percentage (%)",
    fill = "Household Size"
  ) +
  theme_minimal() +
  scale_fill_manual(values = c(
    "0" = "#C6D4D6FF", 
    "1" = "#A2D4AE", 
    "2" = "#0F8D7BFF", 
    "3" = "#236192FF", 
    "4" = "#C6D4D6FF", 
    "5" = "#A2D4AE"
  ))
```

This chart shows that smaller households, particularly those with two members (size 1), dominate both "Poor" and "Not Poor" categories, with the highest percentage in each group. Medium-sized households (sizes 3 and 4) have a more balanced distribution, while larger households (size 5) are more prevalent in the "Poor" category, indicating greater economic vulnerability as household size increases.

### 5.6 Is wealth evenly distributed across different regions of the United States?

```{r}

# Load the data
data_location <- read_delim("data/poverty status_location_percentage.csv", delim = ";", col_names = TRUE)

# Create the bar plot
ggplot(data_location, aes(x = PovertyStatus, y = Percentage, fill = Location)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(
    title = "Percentage by Poverty Status and Location",
    x = "Poverty Status",
    y = "Percentage (%)",
    fill = "Location"
  ) +
  theme_minimal() +
  scale_fill_manual(values = c(
    "Midwest" = "#C6D4D6FF", 
    "Northwest" = "#A2D4AE", 
    "South" = "#0F8D7BFF", 
    "West" = "#236192FF"
  ))

```

The bar chart, based on data analyzed using Neo4j, shows clear differences in poverty and wealth across regions in the United States. The South and West have the highest percentages of people classified as "Poor," with the South being the most affected. In contrast, the Midwest and Northwest have lower poverty rates, suggesting more economic stability in these regions. The Midwest, in particular, stands out with a stronger share of "Not Poor" individuals.

### 3.4 Exploratory data analysis

We proceeded to observe the distribution of income level and level of education, which shows that the group considered "Poor" is accumulated in the group of people with high school as highest level of education. On the other hand, the group with the highest income is the group of people with Bachelor or Master degree.

```{r echo=FALSE}
# Define the colors in the palette
my_palette <- c("#9EA2A2FF","#C6D4D6FF","#DCEDDF","#A2D4AE","#0F8D7BFF",                  "#5E81ACFF","#236192FF","#0C2340FF")
poverty_palette <- c("#A2D4AE", "#236192FF")
# Stacked bar chart of Education by Income
plot_income <- ggplot(prepared_dataset, aes(x = as.factor(Education), fill = factor(Income, levels = 8:1))) +  
  geom_bar() +  
  labs(title = "Education Distribution by Income Interval",
       x = "Education Level", y = "Sum of Education Level") +
  scale_fill_manual(values = my_palette, name = "Income") +
  theme_minimal() +
  scale_x_discrete(labels = c("Less than High School", "High School", "AA degree", "Bachelor's degree", "Master's degree")) +
  theme(plot.title = element_text(size = 11),
    axis.text.x = element_text(size = 8, angle = 45, hjust = 1),
        axis.text.y = element_text(size = 7),
        legend.text = element_text(size = 7),
        legend.title = element_text(size = 9))

# Education Distribution by Poverty Status
plot_poverty <- ggplot(prepared_dataset, aes(x = as.factor(Education), fill = factor(PovertyStatus))) +
  geom_bar(stat = "count", position = "stack") +
  labs(title = "Education Distribution by Poverty Status",
       x = "Education Level", y = "Count of Individuals") +
  scale_fill_manual(values = poverty_palette, name = "Poverty Status") +
  theme_minimal() +
  scale_x_discrete(labels = c("Less than High School", "High School", "AA degree", "Bachelor's degree", "Master's degree")) +
  theme(plot.title = element_text(size = 11),
    axis.text.x = element_text(size = 8, angle = 45, hjust = 1),  
        axis.text.y = element_text(size = 8),
        legend.text = element_text(size = 6),
        legend.title = element_text(size = 7))

grid.arrange(plot_income, plot_poverty, ncol = 2)
```

Following the analysis, it was observed that the variable Marital Status has a significant correlation, and it is easy to notice that most of the people surveyed are married people. On the other hand, analyzing the proportions of each group, in the group of married people, we find that there is a greater proportion of people with the highest leve of income and the least amount of people with lowest level of income.

```{r echo=FALSE}
# Marital Status Labels
marital_status_labels <- c("Married", "Widowed", "Divorced", "Separated", "Never Married")

# Total income distribution by marital status
plot1 <- ggplot(prepared_dataset, aes(x = factor(MaritalStatus, levels = 0:4, labels = marital_status_labels), fill = factor(Income, levels = 8:1))) +
  geom_bar(position = "stack") +
  labs(title = "Income Distribution by Marital Status",
       x = "Marital Status", y = "Sum of Income") +
  scale_fill_manual(values = my_palette, name = "Income") +
  theme_minimal() +
  theme(plot.title = element_text(size = 10),
        axis.title = element_text(size = 10),
        axis.text.x = element_text(size = 7, angle = 45, hjust = 1),
        axis.text.y = element_text(size = 8),
        legend.text = element_text(size = 7),
        legend.title = element_text(size = 9))

# Proportion of income by marital status
plot2 <- ggplot(prepared_dataset, aes(x = factor(MaritalStatus, levels = 0:4, labels = marital_status_labels), fill = factor(Income, levels = 8:1))) +
  geom_bar(position = "fill") +
  labs(title = "Income Proportion by Marital Status",
       x = "Marital Status", y = "Proportion of Income") +
  scale_fill_manual(values = my_palette, name = "Income") +
  theme_minimal() +
  theme(plot.title = element_text(size = 10),
        axis.title = element_text(size = 10),
        axis.text.x = element_text(size = 7, angle = 45, hjust = 1),
        axis.text.y = element_text(size = 8),
        legend.text = element_text(size = 7),
        legend.title = element_text(size = 9))

grid.arrange(plot1, plot2, ncol = 2)
```

## 6. Analysis with LLM

### 6.2 Similarities/Communities Analysis

While attempting to compare the results obtained from the LLM with those generated in Neo4j, the following points were identified:

1.  OpenAI's LLM is unable to calculate similarities with our complete dataset due to weight restrictions, whereas Neo4j can handle the full dataset. As a result, a subset had to be used for the analysis.

2.  The LLM defaulted to calculating similarities using the cosine method without prompting for a preferred method. When requested to use the Louvain method, it responded that it could not execute the algorithm directly. As a workaround, we requested the graphs directly from the LLM.

3.  For the LLM to generate the graphs, the dataset needed to be reduced to include only data points exceeding a high similarity threshold.

4.  Ultimately, the dataset had to be reduced again, this time to 500 observations.

The resulting graph is as follows:

![](images/similarity%20by%20LLM-01.png){width="366"}

Clearly, the LLM was unable to handle the dataset or apply the Louvain algorithm to calculate similarities, demonstrating that LLMs are not suitable tools for every type of analysis.

Conversation: <https://chatgpt.com/share/67578aa2-2e04-8009-b964-7e23a704e22c>

### 6.2 Question Analysis

The bar graphs were correctly interpreted by the LLM, suggesting that the interpretation of already-transformed information is more successful than performing complex calculations from scratch.

### 6.3 Random Forest Analysis

#### 6.2.1 LLM Analysis

To complete this analysis, we asked the LLM to implement a machine learning model called Random Forest and optimize it using the 1-SE rule. The output generated by the LLM was as follows:

![](images/Random%20forest%20image.jpg)

Source: <https://chatgpt.com/share/674b2003-4d88-8009-8055-51bc3d1ea813>

The most significant predictor is the level of education, where individuals with an education level greater than "Bachelor Degree" (3) are less likely to fall under the "Poor" category. Other important variables include household size and marital status, which influence the classification further. For instance, individuals with smaller household sizes or marital statuses "Married" (0) and "Widow" (1) are generally classified as "Not Poor." The tree effectively segments the population based on these variables to predict economic status, emphasizing that education level is the primary determinant of poverty likelihood.

The task to analyze the model was also asked to the LLM and it answered with a correct analysis (detailed in the source link).

#### 6.2.2 Revision of LLM output

Initially, we began with an extensive tree and identified a need to address an imbalance issue in the training set. To resolve this problem, we applied downsampling. After adjusting the dataset, we proceeded to prune the tree applying the 1-SE rule to reduce the chances of overfitting our data.

The resultant tree is the following:

```{r results='hide'}
set.seed(145)
index <- sample(1:nrow(prepared_dataset))
n_tr <- round(0.70 * nrow(prepared_dataset))
n_val <- round(0.15 * nrow(prepared_dataset))

ds_tr <- prepared_dataset[index[1:n_tr], ]  # First 70% for training
ds_val <- prepared_dataset[index[(n_tr + 1):(n_tr + n_val)], ]  # Next 15% for validation
ds_te <- prepared_dataset[index[(n_tr + n_val + 1):nrow(prepared_dataset)], ] #Remaining for testing

ds_tr<-ds_tr[-c(1,8,10)]
ds_te<-ds_te[-c(1,8,10)]
ds_val<-ds_val[-c(1,8,10)]

#downsampling
set.seed(123) ## for reproducibility
ds_tr_down <- downSample(subset(ds_tr, select=-PovertyStatus), y=ds_tr$PovertyStatus, yname="PovertyStatus")

#Creating the extensive tree
poverty_ct <- rpart(PovertyStatus ~ ., data=ds_tr,control = list(cp=0.001) )


#Confusio matrix extensive tree
caret::confusionMatrix(reference=ds_tr$PovertyStatus, data=predict(poverty_ct,type = "class"),
                       positive="Poor")
caret::confusionMatrix(reference=ds_val$PovertyStatus, data=predict(poverty_ct, newdata=ds_val, type="class"),
                       positive="Poor")

#Facing imbalance issue
poverty_ct <- rpart(PovertyStatus ~ ., data=ds_tr_down, control = list(cp=0.001))


#Confusio matrix after imbalance issue
caret::confusionMatrix(reference=ds_tr_down$PovertyStatus, data=predict(poverty_ct,type = "class"),
                       positive="Poor")
caret::confusionMatrix(reference=ds_val$PovertyStatus, data=predict(poverty_ct, newdata=ds_val, type="class"),
                       positive="Poor")
#Pruning
set.seed(123) ## for reproducibility
#plotcp(poverty_ct, upper = "split") # -> select leftmost mean under the line 
#printcp(poverty_ct) # look for the corresponding cp
poverty_ct_prun <- prune(poverty_ct, cp= 0.0050000) # 10 splits, 10 0.0050000

#Confusio matrix pruned tree
caret::confusionMatrix(reference=ds_tr_down$PovertyStatus, data=predict(poverty_ct_prun,type = "class"),
                       positive="Poor")
caret::confusionMatrix(reference=ds_val$PovertyStatus, data=predict(poverty_ct_prun, newdata=ds_val, type="class"),
                       positive="Poor") 


```

```{r}
rpart.plot(poverty_ct_prun)
```

Regarding the interpretation of the model, we can say that the education level of individuals in the United States is the most significant variable in determining whether they will live in poverty. Holding at least a bachelor's degree significantly reduces the likelihood of an individual being poor. The second most important variable is the number of family members, and we observe that households with only one person tend to avoid poverty. As the third most significant variable, marital status shows that being married decreases the likelihood of living in poverty.

Comparing the two decision trees, we can observe that the most significant factor remains education, with a bachelor's degree being a key determinant. This is followed by household size and marital status. However, it appears that the model provided by the **LLM excessively pruned the tree**, preventing us from examining subsequent levels. These levels reveal, unfortunately, that race does indeed play a role in the likelihood of being impoverished. Specifically, not being white in the United States is associated with a higher probability of living in poverty.

## 7. Results and Conclusions

The combination of similarities analysis and clustering analysis provides a complementary approach: similarities analysis uncovers hidden patterns within specific attributes, while clustering offers a holistic view of socio-economic disparities, enabling targeted interventions. Together, they enhance the understanding of socio-economic dynamics and inform more effective strategies.

Education stands out as the most important factor in these models, highlighting the need to promote bachelor's degree programs across the country. Household size and marital status are also key factors. The Decision Tree also shows that being non-white in the USA increases the likelihood of experiencing poverty.

Finally, it was noted that an LLM is not suitable for performing calculations involving large datasets. However, this tool excels at analyzing preprocessed and well-structured data.

## 8. References

1.  United States Census Bureau. (2024). National Poverty in America Awareness Month: January 2024 (Press Release No. CB24-SFS.003). Retrieved from <https://www.census.gov/newsroom/stories/poverty-awareness-month.html#:~:text=The%20official%20poverty%20rate%20in,decreased%20between%202021%20and%202022>
2.  Human Rights Watch. (2022). Racial Discrimination in the United States (American Civil Liberties Union (ACLU)). Retrieved from <https://www.hrw.org/report/2022/08/08/racial-discrimination-united-states/human-rights-watch/aclu-joint-submission>
3.  U.S. Department of Health and Human Services. (n.d.). Poverty guidelines. ASPE. Retrieved May 18, 2024, from <https://aspe.hhs.gov/topics/poverty-economic-mobility/poverty-guidelines>
